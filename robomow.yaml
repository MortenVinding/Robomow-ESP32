# Add to or create a secrets.yaml file in the config dir and put:
# robomow_user: <username>
# robomow_pass: <password>
# Change all IP addresses in the rest_commands to the IP adress of your ESP

switch:
  - platform: template
    switches:
      robomowble:
        value_template: "{{ is_state_attr('sensor.robomow', 'cBLEsw', 'lightgreen') }}"
        turn_on:
          service: script.turn_on
          entity_id: script.robomow_ble_on
        turn_off:
          service: script.turn_on
          entity_id: script.robomow_ble_off2

      robomowbleweekprogramm:
        value_template: "{{ is_state_attr('sensor.robomow_once', '50', '1') }}"
        turn_on:
          service: script.turn_on
          entity_id: script.robomowweekon2
        turn_off:
          service: script.turn_on
          entity_id: script.robomowweekoff

rest_command:
  robomowbleoff:
    username: !secret robomow_user
    password: !secret robomow_pass
    url: "http://192.168.0.133/setcmds?250=0"
  robomowbleon:
    username: !secret robomow_user
    password: !secret robomow_pass
    url: "http://192.168.0.133/setcmds?250=1"
  robomowweekoff:
    username: !secret robomow_user
    password: !secret robomow_pass
    url: "http://192.168.0.133/setcmds?50=0"
  robomowweekon:
    username: !secret robomow_user
    password: !secret robomow_pass
    url: "http://192.168.0.133/setcmds?50=1"
  robomowkante:
    username: !secret robomow_user
    password: !secret robomow_pass
    url: "http://192.168.0.133/setcmds?1=1"
  robomowflaeche:
    username: !secret robomow_user
    password: !secret robomow_pass
    url: "http://192.168.0.133/setcmds?3=1"
  robomowhome:
    username: !secret robomow_user
    password: !secret robomow_pass
    url: "http://192.168.0.133/setcmds?2=1"
  robomowstop:
    username: !secret robomow_user
    password: !secret robomow_pass
    url: "http://192.168.0.133/setcmds?4=1"

sensor:
  - platform: rest
    authentication: basic
    username: !secret robomow_user
    password: !secret robomow_pass
    scan_interval: 300
    method: GET
    resource: http://192.168.0.133/renew
    name: robomow
    json_attributes:
      - "0"
      - "5"
      - "6"
      - "11"
      - "12"
      - "13"
      - "14"
      - "cDSnear"
      - "blesw"
      - "cBLEsw"
      - "rssi"
    value_template: "Robomow"

  - platform: rest
    authentication: basic
    username: !secret robomow_user
    password: !secret robomow_pass
    resource: http://192.168.0.133/once
    name: robomow_once
    json_attributes:
      - "50"
    method: GET
    scan_interval: 3600
    value_template: "Robomow Once"

  - platform: rest
    authentication: basic
    username: !secret robomow_user
    password: !secret robomow_pass
    name: robomow_console
    json_attributes:
      - "fheap"
      - "ifr_msg_isw"
      - "ifr_msg_msw"
      - "ifr_msg_ssw"
      - "gpslat"
      - "gpslon"
    resource: http://192.168.0.133/console
    method: GET
    scan_interval: 5
    value_template: "Robomow Console"

  - platform: template
    sensors:
      location:
        friendly_name: "Location"
        value_template: "{{state_attr('sensor.robomow_console', 'gpslat') }},{{ state_attr('sensor.robomow_console', 'gpslon') }}"
        attribute_templates:
          latitude: "{{state_attr('sensor.robomow_console', 'gpslat') }}"
          longitude: "{{ state_attr('sensor.robomow_console', 'gpslon') }}"
      robomow_soc:
        friendly_name: "Battery SoC"
        unit_of_measurement: "%"
        device_class: battery
        # Need to remove last 2 character since HA will not accept " %"
        value_template: "{{state_attr('sensor.robomow', '0')[:-2] }}"
      robomow_cdsnear:
        friendly_name: "cDSnear"
        value_template: "{{state_attr('sensor.robomow', 'cDSnear') }}"
      robomow_status:
        friendly_name: "Current status"
        value_template: "{{state_attr('sensor.robomow', '6') }}"
      robomow_timeleft:
        friendly_name: "Cutting time left"
        value_template: "{{state_attr('sensor.robomow', '11') }}"
      robomow_nextstart:
        friendly_name: "Cutting next start"
        value_template: "{{state_attr('sensor.robomow', '5') }}"
      robomow_moisture:
        friendly_name: "Moisture"
        unit_of_measurement: "%"
        value_template: "{{state_attr('sensor.robomow', '13') }}"
      robomow_percentagecut:
        friendly_name: "Percentage cut"
        unit_of_measurement: "%"
        value_template: "{{state_attr('sensor.robomow', '12')[:-2] }}"
      robomow_rssi:
        friendly_name: "WiFi rssi"
        unit_of_measurement: "dBm"
        value_template: "{{state_attr('sensor.robomow', 'rssi') }}"

script:
  robomow_ble_off2:
    alias: Robomow BLE Off
    sequence:
    - service: rest_command.robomowbleoff
    - delay:
        hours: 0
        minutes: 0
        seconds: 10
        milliseconds: 0
    - service: homeassistant.update_entity
      target:
        entity_id: sensor.robomow
    mode: single
  robomow_ble_on:
    alias: Robomow BLE On
    sequence:
    - service: rest_command.robomowbleon
    - delay:
        hours: 0
        minutes: 0
        seconds: 10
        milliseconds: 0
    - service: homeassistant.update_entity
      target:
        entity_id: sensor.robomow
    mode: single
  robomow_flaeche:
    alias: Robomow Flaeche
    sequence:
    - service: rest_command.robomowflaeche
    - delay:
        hours: 0
        minutes: 0
        seconds: 10
        milliseconds: 0
    - service: homeassistant.update_entity
      target:
        entity_id: sensor.robomow
    mode: single
  robomow_stop:
    alias: Robomow Stop
    sequence:
    - service: rest_command.robomowstop
    - delay:
        hours: 0
        minutes: 0
        seconds: 10
        milliseconds: 0
    - service: homeassistant.update_entity
      target:
        entity_id: sensor.robomow
    mode: single
  robomow_home:
    alias: Robomow Home
    sequence:
    - service: rest_command.robomowhome
    - delay:
        hours: 0
        minutes: 0
        seconds: 10
        milliseconds: 0
    - service: homeassistant.update_entity
      target:
        entity_id: sensor.robomow
    mode: single
  robomow_kante:
    alias: Robomow Kante
    sequence:
    - service: rest_command.robomowkante
    - delay:
        hours: 0
        minutes: 0
        seconds: 10
        milliseconds: 0
    - service: homeassistant.update_entity
      target:
        entity_id: sensor.robomow
    mode: single
  robomow_renew:
    alias: Robomow Renew
    sequence:
    - service: homeassistant.update_entity
      target:
        entity_id:
        - sensor.robomow
        - sensor.robomow_once
    mode: single
  robomowweekoff:
    alias: RobomowWeekOFF
    sequence:
    - service_template: "{% if not is_state_attr('sensor.robomow', 'cBLEsw', 'lightgreen')\
        \ %}\n    script.robomow_ble_on        \n{% else %}\n    script.robomow_renew\n\
        {% endif %}\n"
    - delay:
        hours: 0
        minutes: 0
        seconds: 3
        milliseconds: 0
    - service: rest_command.robomowweekoff
    - delay:
        hours: 0
        minutes: 0
        seconds: 4
        milliseconds: 0
    - service: homeassistant.update_entity
      target:
        entity_id:
        - sensor.robomow_once
    mode: single
  robomowweekon2:
    alias: RobomowWeekON
    sequence:
    - service_template: "{% if not is_state_attr('sensor.robomow', 'cBLEsw', 'lightgreen')\
        \ %}\n    script.robomow_ble_on        \n{% else %}\n    script.robomow_renew\n\
        {% endif %}\n"
    - delay:
        hours: 0
        minutes: 0
        seconds: 3
        milliseconds: 0
    - service: rest_command.robomowweekon
    - delay:
        hours: 0
        minutes: 0
        seconds: 5
        milliseconds: 0
    - service: homeassistant.update_entity
      target:
        entity_id: sensor.robomow
    - service: homeassistant.update_entity
      target:
        entity_id:
        - sensor.robomow_once
    mode: single
